# -*- coding: utf-8 -*-
##############################################################################
## Magnetomap data feed acceptor for Python
##############################################################################
## Version        : 1.0
## URL            : https://github.com/Vladimir-Lin/pyMagnetomap
## Lastest update : 2024/03/04 02:51
## Author         : Vladimir Lin aka Foxman
##############################################################################
import os
import sys
import getopt
import time
import threading
import json
##############################################################################
import urllib
from   urllib          import parse
##############################################################################
from   http   . server import HTTPServer
from   http   . server import BaseHTTPRequestHandler
from   socketserver    import ThreadingMixIn
##############################################################################
MagnetomapPort     = 8093
MagnetomapUsername = "whoever"
MagnetomapPassword = "knock"
MagnetomapPath     = "Magnetomap"
HttpRunning        = False
Httpd              = None
HttpStep           = 0
##############################################################################
def SayHelp (                                                              ) :
  print     ( "pyMagnetoMap.py\n"
              " --port=binding_port\n"
              " --username=http_username\n"
              " --password=http_password\n"
              " --path=http_path\n"                                          )
##############################################################################
## Accept pyMagnetoMap parameters
##############################################################################
def GetOptions                 ( argv                                      ) :
  ############################################################################
  global MagnetomapPort
  global MagnetomapUsername
  global MagnetomapPassword
  global MagnetomapPath
  ############################################################################
  try                                                                        :
    ##########################################################################
    opts , args = getopt . getopt                                            (
                    argv                                                     ,
                    "p:"                                                     ,
                    [ "port="                                                ,
                      "username="                                            ,
                      "password="                                            ,
                      "path="                                              ] )
    ##########################################################################
  except getopt . GetoptError                                                :
    ##########################################################################
    SayHelp                    (                                             )
    sys . exit                 ( 2                                           )
  ############################################################################
  for opt , arg in opts                                                      :
    ##########################################################################
    if   opt in                ( "-p" , "--port"                           ) :
      ########################################################################
      MagnetomapPort     = int ( arg                                         )
      ########################################################################
    elif opt in                ( "--username"                              ) :
      ########################################################################
      MagnetomapUsername = f"{arg}"
      ########################################################################
    elif opt in                ( "--password"                              ) :
      ########################################################################
      MagnetomapPassword = f"{arg}"
      ########################################################################
    elif opt in                ( "--path"                                  ) :
      ########################################################################
      MagnetomapPath     = f"{arg}"
    ##########################################################################
  return True
##############################################################################
## Magnetomap Httpd daemon
##############################################################################
class MagnetomapHandler        ( BaseHTTPRequestHandler                    ) :
  ############################################################################
  ## Silence output message
  ## Uncomment function log_message to hide logging messages
  ############################################################################
  ## def log_message              ( self , format , *args                     ) :
  ##   ##########################################################################
  ##   ##########################################################################
  ##   return
  ############################################################################
  ## Handler for the GET requests
  ############################################################################
  def do_GET                   ( self                                      ) :
    return self . Handling     ( False                                       )
  ############################################################################
  ## Handler for the GET requests
  ############################################################################
  def do_POST                  ( self                                      ) :
    return self . Handling     ( True                                        )
  ############################################################################
  def Handling                 ( self , posting                            ) :
    ##########################################################################
    global MagnetomapUsername
    global MagnetomapPassword
    ##########################################################################
    ## Parse HTTP Header
    ##########################################################################
    uri = parse . urlparse     ( self . path                                 )
    JSON     =                 {                                             }
    Response =                 {                                             }
    Answer   = 200
    ##########################################################################
    if                         ( posting                                   ) :
      ########################################################################
      ## Receive JSON from HTTP Body with POST method
      ########################################################################
      contentLength = int      ( self . headers [ 'Content-Length' ]         )
      if                       ( contentLength > 0                         ) :
        ######################################################################
        try                                                                  :
          ####################################################################
          body = self . rfile . read ( contentLength                         )
          body = body . decode ( "utf-8"                                     )
          JSON = json . loads  ( body                                        )
          ####################################################################
        except ValueError                                                    :
          ####################################################################
          Answer = 400
      ########################################################################
    else                                                                     :
      ########################################################################
      ## Receive JSON from HTTP Body with GET method
      ########################################################################
      par = parse . parse_qs   ( uri . query                                 )
      ########################################################################
      if                       ( len ( par ) > 0                           ) :
        ######################################################################
        pKeys = par . keys     (                                             )
        ######################################################################
        for k in pKeys                                                       :
          JSON [ k ] = par [ k ] [ 0 ]
    ##########################################################################
    ## HTTP Header Username and Password Verification
    ##########################################################################
    SU   = ""
    PW   = ""
    ##########################################################################
    if                         ( "Username" in self . headers              ) :
      SU = self . headers      [ "Username"                                  ]
    if                         ( "Password" in self . headers              ) :
      PW = self . headers      [ "Password"                                  ]
    ##########################################################################
    if                         ( len ( MagnetomapUsername ) > 0            ) :
      if                       ( not ( MagnetomapUsername == SU )          ) :
        Answer = 401
    ##########################################################################
    if                         ( len ( MagnetomapPassword ) > 0            ) :
      if                       ( not ( MagnetomapPassword == PW )          ) :
        Answer = 401
    ##########################################################################
    ## Dispatch HTTP Command
    ##########################################################################
    if                         ( Answer == 200                             ) :
      ########################################################################
      Dispatched = self . Dispatch ( uri . path , self . headers , JSON      )
      ########################################################################
      Response   = Dispatched  [ "Response"                                  ]
      Answer     = Dispatched  [ "Answer"                                    ]
    ##########################################################################
    ## Reply the html header
    ##########################################################################
    self . send_response       ( Answer                                      )
    self . send_header         ( 'Content-type' , 'application/json'         )
    self . end_headers         (                                             )
    ##########################################################################
    ## Reply the html message
    ##########################################################################
    self . wfile . write       ( bytes ( str ( Response )                  , \
                                 encoding = "utf8"                         ) )
    ##########################################################################
    return
  ############################################################################
  ## Dispatch HTTP Command
  ############################################################################
  def Dispatch                       ( self , Path , Headers , JSON        ) :
    ##########################################################################
    global MagnetomapPath
    ##########################################################################
    MPath = f"/{MagnetomapPath}"
    ##########################################################################
    if                               ( MPath == Path                       ) :
      return self . AcceptMagnetomap ( JSON                                  )
    ##########################################################################
    if                               ( "/ACK" == Path                      ) :
      return self . DoACK            ( JSON                                  )
    ##########################################################################
    return                           { "Answer"   : 200                      ,
                                       "Response" : { "Answer" : "Yes" }     }
  ############################################################################
  ## ACK Command for network online
  ############################################################################
  def DoACK ( self , JSON                                                  ) :
    return  { "Answer" : 202 , "Response" : { "Answer": "Yes" }              }
  ############################################################################
  ## Dispatch Magnetomap data feed to target function
  ############################################################################
  def AcceptMagnetomap ( self , JSON                                       ) :
    ##########################################################################
    if                 ( "Total"   not in JSON                             ) :
      return           { "Answer"   : 200                                  , \
                         "Response" : { "Answer": "No"                     } }
    ##########################################################################
    if                 ( "Type"    not in JSON                             ) :
      return           { "Answer"   : 200                                  , \
                         "Response" : { "Answer": "No"                     } }
    ##########################################################################
    if                 ( "Magnets" not in JSON                             ) :
      return           { "Answer"   : 200                                  , \
                         "Response" : { "Answer": "No"                     } }
    ##########################################################################
    threading . Thread ( target = ReceiveMagnetomap                          ,
                         args   = ( JSON , )                     ) . start ( )
    ##########################################################################
    return             { "Answer"   : 200                                    ,
                         "Response" : { "Answer" : "Yes"                   } }
##############################################################################
class ThreadedHTTPServer     ( ThreadingMixIn , HTTPServer                 ) :
  pass
##############################################################################
def RunHttpd                    (                                          ) :
  ############################################################################
  global Httpd
  global HttpStep
  global MagnetomapPort
  global MagnetomapUsername
  global MagnetomapPassword
  global MagnetomapPath
  ############################################################################
  HttpStep = 0
  ############################################################################
  MSG      = f"Trying to start Magnetomap Httpd at port {MagnetomapPort}..."
  print                         ( MSG                                        )
  ############################################################################
  Httpd    = ThreadedHTTPServer ( ( '0.0.0.0' , MagnetomapPort )           , \
                                  MagnetomapHandler                          )
  ############################################################################
  HttpStep = 1
  ############################################################################
  MSG      = f"""Port at {MagnetomapPort}
Path at {MagnetomapPath}
Username in HTTP header is {MagnetomapUsername}
Password in HTTP header is {MagnetomapPassword}
Magnetomap Httpd started
Press Ctrl+C to stop this daemon"""
  print                         ( MSG                                        )
  ############################################################################
  Httpd    . serve_forever      (                                            )
  ############################################################################
  HttpStep = 2
  ############################################################################
  return
##############################################################################
## Stop Magnetomap Httpd data feed acceptor
##############################################################################
def StopHttpd     (                                                      ) :
  ############################################################################
  global Httpd
  global HttpStep
  ############################################################################
  Httpd  . shutdown (                                                        )
  ############################################################################
  while             ( HttpStep != 2                                        ) :
    time . sleep    ( 0.05                                                   )
  ############################################################################
  ############################################################################
  return True
##############################################################################
## Magnetomap HttpFeeder Handler
##############################################################################
def MagnetomapHttpFeederHandler ( JSON                                     ) :
  ############################################################################
  for m in JSON                 [ "Magnets"                                ] :
    ##########################################################################
    print                       ( json . dumps ( m                         ) )
  ############################################################################
  return True
##############################################################################
## Magnetomap File Handler
##############################################################################
def MagnetomapFileHandler ( JSON                                           ) :
  ############################################################################
  print                   ( json . dumps ( JSON                            ) )
  ############################################################################
  return True
##############################################################################
## Receive data feed from Magnetomap
##############################################################################
def ReceiveMagnetomap           ( JSON                                     ) :
  ############################################################################
  MTYPE = JSON                  [ "Type"                                     ]
  ############################################################################
  if                            ( "HttpFeeder" == MTYPE                    ) :
    ##########################################################################
    MagnetomapHttpFeederHandler ( JSON )
    ##########################################################################
  elif                          ( "File"       == MTYPE                    ) :
    ##########################################################################
    MagnetomapFileHandler       ( JSON                                       )
  ############################################################################
  return True
##############################################################################
## Magnetomap data feed acceptor
##############################################################################
def MagnetomapAccepter (                                                   ) :
  ############################################################################
  global HttpRunning
  ############################################################################
  HttpRunning = True
  ############################################################################
  threading . Thread   ( target = RunHttpd ) . start (                       )
  ############################################################################
  while                ( HttpRunning                                       ) :
    ##########################################################################
    try                                                                      :
      ########################################################################
      time . sleep     ( 0.25                                                )
      ########################################################################
    except KeyboardInterrupt                                                 :
      ########################################################################
      StopHttpd        (                                                     )
      ########################################################################
      HttpRunning = False
  ############################################################################
  sys         . exit   ( 0                                                   )
  ############################################################################
  return True
##############################################################################
if                   ( __name__ == '__main__'                              ) :
  ############################################################################
  GetOptions         ( sys . argv [ 1 : ]                                    )
  MagnetomapAccepter (                                                       )
##############################################################################
